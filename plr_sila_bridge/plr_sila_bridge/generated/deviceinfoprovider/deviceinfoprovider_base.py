# Generated by sila2.code_generator; sila2.__version__: 0.12.2
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING, Any

from sila2.server import FeatureImplementationBase, MetadataDict

from .deviceinfoprovider_types import DeviceInfo, SetOutputFormat_Responses

if TYPE_CHECKING:
    from ...server import Server


class DeviceInfoProviderBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """

        This SiLA feature provides detailed information about a device, like device name, device type,
        device manufacturer, device product name, device version, device manual, device quick start guide,
        device service manual, device serial number, device registration number, device barcode, device production date,
        device purchase date, device end of warrenty, device service dates, device service information, etc.

        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def get_DeviceName(self, *, metadata: MetadataDict) -> str:
        """

            Name of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Name of the Device.

        """

    @abstractmethod
    def get_DeviceType(self, *, metadata: MetadataDict) -> str:
        """

            Type of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Type of the Device.

        """

    @abstractmethod
    def get_DeviceManufacturer(self, *, metadata: MetadataDict) -> str:
        """

            Manufacturer of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Manufacturer of the Device.

        """

    @abstractmethod
    def get_DeviceProductName(self, *, metadata: MetadataDict) -> str:
        """

            Product Name of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Product Name of the Device.

        """

    @abstractmethod
    def get_DeviceVersion(self, *, metadata: MetadataDict) -> str:
        """

            Version of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Version of the Device.

        """

    @abstractmethod
    def get_DeviceFirmwareVersion(self, *, metadata: MetadataDict) -> str:
        """

            Version of the Device Firmware.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Version of the Device Firmware.

        """

    @abstractmethod
    def get_DeviceManual(self, *, metadata: MetadataDict) -> str:
        """

            URL to Manual of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            URL to Manual of the Device.

        """

    @abstractmethod
    def get_DeviceQuickStartGuide(self, *, metadata: MetadataDict) -> str:
        """

            URL to Quick Start Guide of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            URL to Quick Start Guide of the Device.

        """

    @abstractmethod
    def get_DeviceServiceManual(self, *, metadata: MetadataDict) -> str:
        """

            URL to Service Manual of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            URL to Service Manual of the Device.

        """

    @abstractmethod
    def get_HardwareSettings(self, *, metadata: MetadataDict) -> str:
        """

            Hardware Settings of the Device, like serial port settings, etc., preferably in JSON-LD format.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Hardware Settings of the Device, like serial port settings, etc., preferably in JSON-LD format.

        """

    @abstractmethod
    def get_HardwareConfiguration(self, *, metadata: MetadataDict) -> str:
        """

            Hardware Configuration of the Device, like racks with n slots, slot spacing, shakers, barcode reader, CO2 unit, etc.,
            preferably in JSON-LD format.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Hardware Configuration of the Device, like racks with n slots, slot spacing, shakers, barcode reader, CO2 unit, etc.,
            preferably in JSON-LD format.

        """

    @abstractmethod
    def get_DeviceInfo(self, *, metadata: MetadataDict) -> DeviceInfo:
        """

            Detailed Information about the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Detailed Information about the Device.

        """

    @abstractmethod
    def get_ServiceDates(self, *, metadata: MetadataDict) -> Any:
        """

            Service Dates of the Device.


        :param metadata: The SiLA Client Metadata attached to the call
        :return:
            Service Dates of the Device.

        """

    @abstractmethod
    def SetOutputFormat(self, OutputFormat: str, *, metadata: MetadataDict) -> SetOutputFormat_Responses:
        """

            Set the output format of the device information, like TEXT, JSON-LD, XML, etc.
            The recommended default output format is JSON-LD, which allows to provide detailed information about the device in a structured way with semantic annotations / context, referencing to defined vocabularies.



        :param OutputFormat:
                Output format of the device information.


        :param metadata: The SiLA Client Metadata attached to the call

        """
